<UserControl x:Class="MyExpenses.Wpf.UserControls.Colors.ColorPickerControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:MyExpenses.Wpf.UserControls.Colors"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converters="clr-namespace:MyExpenses.Wpf.Converters"
             xmlns:colors="clr-namespace:MyExpenses.Wpf.Converters.Colors"
             xmlns:margin="clr-namespace:MyExpenses.Wpf.Utils.Margin;assembly=MyExpenses.Wpf.Utils"
             mc:Ignorable="d">

    <UserControl.Resources>
        <converters:RoundThreeDecimalConverter x:Key="RoundThreeDecimalConverter" />
        <colors:ColorToHexConverter x:Key="ColorToHexConverter" />

        <Style x:Key="StyleSlider" TargetType="Slider">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Slider">
                        <Grid Background="{TemplateBinding Background}">
                            <Track x:Name="PART_Track">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="Slider.DecreaseLarge" Visibility="Hidden" />
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb>
                                        <Thumb.Template>
                                            <ControlTemplate>
                                                <Grid>
                                                    <Polygon Margin="-4, 0, -6, -8"
                                                             Fill="{DynamicResource MaterialDesignPaper}"
                                                             Stroke="{DynamicResource MaterialDesignBody}"
                                                             StrokeThickness="1.5"
                                                             Points="15,0 10,5 10,20 15,25 0,25 5,20 5,5 0,0 15,0">
                                                    </Polygon>
                                                </Grid>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="Slider.IncreaseLarge" Visibility="Hidden" />
                                </Track.IncreaseRepeatButton>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <Grid margin:PanelExtensions.MarginForAllChildren="5">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="150" />
            <ColumnDefinition Width="Auto" MinWidth="55" />
        </Grid.ColumnDefinitions>

        <materialDesign:ColorPicker Grid.Row="0" Grid.Column="0"
                                    Grid.RowSpan="7" Grid.ColumnSpan="2"
                                    MinHeight="150"
                                    Color="{Binding Color, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}">
        </materialDesign:ColorPicker>

        <Label Grid.Row="0" Grid.Column="2"
               HorizontalContentAlignment="Right"
               Content="{Binding LabelRedChannel, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}">
        </Label>

        <Label Grid.Row="1" Grid.Column="2"
               HorizontalContentAlignment="Right"
               Content="{Binding LabelGreenChannel, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}">
        </Label>

        <Label Grid.Row="2" Grid.Column="2"
               HorizontalContentAlignment="Right"
               Content="{Binding LabelBlueChannel, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}">
        </Label>

        <Label Grid.Row="3" Grid.Column="2"
               HorizontalContentAlignment="Right"
               Content="{Binding LabelHueChannel, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}">
        </Label>

        <Label Grid.Row="4" Grid.Column="2"
               HorizontalContentAlignment="Right"
               Content="{Binding LabelSaturationChannel, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}">
        </Label>

        <Label Grid.Row="5" Grid.Column="2"
               HorizontalContentAlignment="Right"
               Content="{Binding LabelValueChannel, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}">
        </Label>

        <Label Grid.Row="6" Grid.Column="2"
               HorizontalContentAlignment="Right"
               Content="{Binding LabelAlphaChannel, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}">
        </Label>

        <!-- Red Slider -->
        <Border Grid.Row="0" Grid.Column="3"
                BorderBrush="{Binding RedSliderBorderBrush, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}"
                BorderThickness="{Binding RedSliderBorderThickness, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}">

            <Slider Minimum="0" Maximum="255"
                    TickFrequency="1" SmallChange="1"
                    Value="{Binding RedValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}"
                    Style="{StaticResource StyleSlider}">
                <Slider.Background>
                    <LinearGradientBrush StartPoint="1, 0"
                                         EndPoint="0, 0">
                        <GradientStop x:Name="RedGradientStart" Offset="1.0" />
                        <GradientStop x:Name="RedGradientStop" Offset="0.0" />
                    </LinearGradientBrush>
                </Slider.Background>
            </Slider>

        </Border>

        <!-- Green slider -->
        <Border Grid.Row="1" Grid.Column="3"
                BorderBrush="{Binding GreenSliderBorderBrush, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}"
                BorderThickness="{Binding GreenSliderBorderThickness, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}">

            <Slider Minimum="0" Maximum="255"
                    TickFrequency="1" SmallChange="1"
                    Value="{Binding GreenValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}"
                    Style="{StaticResource StyleSlider}">
                <Slider.Background>
                    <LinearGradientBrush StartPoint="1, 0"
                                         EndPoint="0, 0">
                        <GradientStop x:Name="GreenGradientStart" Offset="1.0" />
                        <GradientStop x:Name="GreenGradientStop" Offset="0.0" />
                    </LinearGradientBrush>
                </Slider.Background>
            </Slider>

        </Border>

        <!-- Blue Slider -->
        <Border Grid.Row="2" Grid.Column="3"
                BorderBrush="{Binding BlueSliderBorderBrush, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}"
                BorderThickness="{Binding BlueSliderBorderThickness, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}">

            <Slider Minimum="0" Maximum="255"
                    TickFrequency="1" SmallChange="1"
                    Value="{Binding BlueValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}"
                    Style="{StaticResource StyleSlider}">
                <Slider.Background>
                    <LinearGradientBrush StartPoint="1, 0"
                                         EndPoint="0, 0">
                        <GradientStop x:Name="BlueGradientStart" Offset="1.0" />
                        <GradientStop x:Name="BlueGradientStop" Offset="0.0" />
                    </LinearGradientBrush>
                </Slider.Background>
            </Slider>

        </Border>

        <!-- Hue Slider -->
        <Border Grid.Row="3" Grid.Column="3"
                BorderBrush="{Binding HueSliderBorderBrush, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}"
                BorderThickness="{Binding HueSliderBorderThickness, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}">

            <Slider Minimum="0" Maximum="360"
                    TickFrequency="0.1" SmallChange="0.1"
                    Value="{Binding HueValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}"
                    Style="{StaticResource StyleSlider}">
                <Slider.Background>
                    <LinearGradientBrush StartPoint="0, 0"
                                         EndPoint="1, 0">
                        <GradientStop Color="#FFFF0000" Offset="0.0" />
                        <GradientStop Color="#FFFF7F00" Offset="0.15" />
                        <GradientStop Color="#FFFFFF00" Offset="0.3" />
                        <GradientStop Color="#FF00FF00" Offset="0.45" />
                        <GradientStop Color="#FF0000FF" Offset="0.6" />
                        <GradientStop Color="#FF4B0082" Offset="0.75" />
                        <GradientStop Color="#FF9400D3" Offset="0.9" />
                        <GradientStop Color="#FFFF0000" Offset="1.0" />
                    </LinearGradientBrush>
                </Slider.Background>
            </Slider>

        </Border>

        <!-- Saturation Slider -->
        <Border Grid.Row="4" Grid.Column="3"
                BorderBrush="{Binding SaturationSliderBorderBrush, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}"
                BorderThickness="{Binding SaturationSliderBorderThickness, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}">

            <Slider Minimum="0" Maximum="1"
                    TickFrequency="0.01" SmallChange="0.01"
                    Value="{Binding SaturationValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}"
                    Style="{StaticResource StyleSlider}">
                <Slider.Background>
                    <LinearGradientBrush StartPoint="1, 0"
                                         EndPoint="0, 0">
                        <GradientStop x:Name="SaturationGradientStart" Offset="1.0" />
                        <GradientStop x:Name="SaturationGradientStop" Offset="0.0" />
                    </LinearGradientBrush>
                </Slider.Background>
            </Slider>

        </Border>

        <!-- Value Slider -->
        <Border Grid.Row="5" Grid.Column="3"
                BorderBrush="{Binding ValueSliderBorderBrush, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}"
                BorderThickness="{Binding ValueSliderBorderThickness, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}">

            <Slider Minimum="0" Maximum="1"
                    TickFrequency="0.01" SmallChange="0.01"
                    Value="{Binding ValueValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}"
                    Style="{StaticResource StyleSlider}">
                <Slider.Background>
                    <LinearGradientBrush StartPoint="1, 0"
                                         EndPoint="0, 0">
                        <GradientStop x:Name="ValueGradientStart" Offset="1.0" />
                        <GradientStop x:Name="ValueGradientStop" Offset="0.0" />
                    </LinearGradientBrush>
                </Slider.Background>
            </Slider>

        </Border>

        <!-- Alpha Slider -->
        <Border Grid.Row="6" Grid.Column="3"
                BorderBrush="{Binding AlphaSliderBorderBrush, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}"
                BorderThickness="{Binding AlphaSliderBorderThickness, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}">

            <Slider Minimum="0" Maximum="255"
                    TickFrequency="1" SmallChange="1"
                    Value="{Binding AlphaValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}"
                    Style="{StaticResource StyleSlider}">
                <Slider.Background>
                    <LinearGradientBrush StartPoint="1, 0"
                                         EndPoint="0, 0">
                        <GradientStop x:Name="AlphaGradientStart" Offset="1.0" />
                        <GradientStop x:Name="AlphaGradientStop" Offset="0.0" />
                    </LinearGradientBrush>
                </Slider.Background>
            </Slider>

        </Border>

        <TextBox Grid.Row="0" Grid.Column="4"
                 Text="{Binding RedValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}"
                 PreviewTextInput="UIElement_int_only_OnPreviewTextInput"
                 TextChanged="TextBoxBase_0_to_255_OnTextChanged">
        </TextBox>

        <TextBox Grid.Row="1" Grid.Column="4"
                 Text="{Binding GreenValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}"
                 PreviewTextInput="UIElement_int_only_OnPreviewTextInput"
                 TextChanged="TextBoxBase_0_to_255_OnTextChanged">
        </TextBox>

        <TextBox Grid.Row="2" Grid.Column="4"
                 Text="{Binding BlueValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}"
                 PreviewTextInput="UIElement_int_only_OnPreviewTextInput"
                 TextChanged="TextBoxBase_0_to_255_OnTextChanged">
        </TextBox>

        <TextBox Grid.Row="3" Grid.Column="4"
                 Text="{Binding HueValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource RoundThreeDecimalConverter}, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}"
                 PreviewTextInput="UIElement_double_only_OnPreviewTextInput"
                 TextChanged="TextBoxBase_0_to_360_OnTextChanged">
        </TextBox>

        <TextBox Grid.Row="4" Grid.Column="4"
                 Text="{Binding SaturationValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource RoundThreeDecimalConverter}, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}"
                 PreviewTextInput="UIElement_double_only_OnPreviewTextInput"
                 TextChanged="TextBoxBase_0_to_1_OnTextChanged">
        </TextBox>

        <TextBox Grid.Row="5" Grid.Column="4"
                 Text="{Binding ValueValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource RoundThreeDecimalConverter}, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}"
                 PreviewTextInput="UIElement_double_only_OnPreviewTextInput"
                 TextChanged="TextBoxBase_0_to_1_OnTextChanged">
        </TextBox>

        <TextBox Grid.Row="6" Grid.Column="4"
                 Text="{Binding AlphaValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}"
                 PreviewTextInput="UIElement_int_only_OnPreviewTextInput"
                 TextChanged="TextBoxBase_0_to_255_OnTextChanged">
        </TextBox>

        <Label Grid.Row="7" Grid.Column="0"
               HorizontalContentAlignment="Center"
               Content="{Binding LabelPreview, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}">
        </Label>

        <Rectangle Grid.Row="7" Grid.Column="1"
                   StrokeThickness="1.5"
                   Stroke="{DynamicResource MaterialDesignBody}"
                   Fill="{Binding Color, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ColorToHexConverter}, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}">
        </Rectangle>

        <TextBox Grid.Row="7" Grid.Column="2" Grid.ColumnSpan="3"
                 materialDesign:HintAssist.Hint="{Binding LabelHexadecimalCode, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}"
                 Style="{StaticResource MaterialDesignFilledTextBox}"
                 Text="{Binding Color, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ColorToHexConverter}, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerControl}}}">
        </TextBox>

    </Grid>

</UserControl>