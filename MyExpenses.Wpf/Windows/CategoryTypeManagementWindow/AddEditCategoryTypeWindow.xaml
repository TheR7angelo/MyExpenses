<mah:MetroWindow x:Class="MyExpenses.Wpf.Windows.CategoryTypeManagementWindow.AddEditCategoryTypeWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:margin="clr-namespace:MyExpenses.Wpf.Utils.Margin;assembly=MyExpenses.Wpf.Utils"
        xmlns:converters="clr-namespace:MyExpenses.Wpf.Converters"
        mc:Ignorable="d"

        Title="{Binding TitleWindow, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"

        d:DesignHeight="250"
        d:DesignWidth="400"

        MinHeight="250"
        MinWidth="400"
        Height="250"
        Width="400"

        TitleCharacterCasing="Normal"
        NonActiveWindowTitleBrush="Gray"
        WindowTitleBrush="Gray"
        BorderBrush="Gray"

        ShowIconOnTitleBar="True"
        Icon="../../Resources/Assets/Applications/Icon.png"

        WindowStartupLocation="CenterScreen"
        ResizeMode="CanResizeWithGrip"

        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"

        DataContext="{Binding RelativeSource={RelativeSource Self}}">

    <mah:MetroWindow.Resources>
        <converters:MaxLengthConverter x:Key="MaxLengthConverter" />
    </mah:MetroWindow.Resources>

    <Grid margin:PanelExtensions.MarginForAllChildren="5">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <TextBox Grid.Row="0"
                 Text="{Binding CategoryType.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 MaxLength="{Binding CategoryType, Converter={StaticResource MaxLengthConverter}, ConverterParameter=Name}"
                 materialDesign:TextFieldAssist.HasClearButton="True"
                 materialDesign:HintAssist.Hint="{Binding TextBoxCategoryTypeName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                 Style="{StaticResource MaterialDesignFilledTextBox}"
                 PreviewLostKeyboardFocus="TextBoxCategoryType_OnPreviewLostKeyboardFocus">
        </TextBox>

        <Grid Grid.Row="1" margin:PanelExtensions.MarginForAllChildren="3">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <ComboBox x:Name="ComboBoxColors" Grid.Column="0"
                      materialDesign:HintAssist.Hint="{Binding ComboBoxColorValue, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      materialDesign:TextFieldAssist.HasClearButton="True"
                      ItemsSource="{Binding Colors}"
                      Style="{StaticResource MaterialDesignFilledComboBox}"
                      SelectedValue="{Binding CategoryType.ColorFk, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      SelectedValuePath="{Binding ComboBoxColorSelectedValuePath}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel margin:PanelExtensions.MarginForAllChildren="5"
                            Orientation="Horizontal">

                            <Ellipse Height="{Binding ActualHeight, ElementName=Text}"
                                     Width="{Binding ActualHeight, ElementName=TextBlock}"
                                     StrokeThickness="1"
                                     Stroke="{DynamicResource MaterialDesignBody}"
                                     Fill="{Binding HexadecimalColorCode, Mode=OneWay}">
                            </Ellipse>

                            <TextBlock x:Name="TextBlock" Text="{Binding Name}" />

                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <Border Grid.Column="1"
                    Height="{Binding ActualHeight, UpdateSourceTrigger=PropertyChanged, ElementName=ComboBoxColors}"
                    Width="{Binding ActualHeight, UpdateSourceTrigger=PropertyChanged, ElementName=ComboBoxColors}"
                    BorderBrush="{DynamicResource MaterialDesignBody}"
                    BorderThickness="1.5"
                    Background="{Binding SelectedItem.HexadecimalColorCode, UpdateSourceTrigger=PropertyChanged, ElementName=ComboBoxColors}">
            </Border>

            <Button Grid.Column="2"
                    HorizontalAlignment="Left"
                    Style="{StaticResource MaterialDesignFloatingActionMiniDarkButton}"
                    Click="ButtonAddColor_OnClick">
                <Button.Content>
                    <materialDesign:PackIcon Kind="PencilPlus" />
                </Button.Content>
            </Button>

        </Grid>

        <StackPanel Grid.Row="2"
                    margin:PanelExtensions.MarginForAllChildren="5"
                    Orientation="Horizontal"
                    HorizontalAlignment="Center" VerticalAlignment="Center">

            <Button Content="{Binding ButtonValidContent, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource MaterialDesignPaperButton}"
                    Click="ButtonValid_OnClick">
            </Button>

            <Button Content="{Binding ButtonDeleteContent, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource MaterialDesignPaperDarkButton}"
                    Visibility="{Binding EditCategoryType, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Click="ButtonDelete_OnClick">
            </Button>

            <Button Content="{Binding ButtonCancelContent, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource MaterialDesignPaperSecondaryButton}"
                    Click="ButtonCancel_OnClick">
            </Button>

        </StackPanel>

    </Grid>

</mah:MetroWindow>
