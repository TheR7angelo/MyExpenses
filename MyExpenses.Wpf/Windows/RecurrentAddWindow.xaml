<mah:MetroWindow x:Class="MyExpenses.Wpf.Windows.RecurrentAddWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:MyExpenses.Wpf.Windows"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:margin="clr-namespace:MyExpenses.Wpf.Utils.Margin;assembly=MyExpenses.Wpf.Utils"
        xmlns:converters="clr-namespace:MyExpenses.Wpf.Converters"
        mc:Ignorable="d"

        Title="{Binding TitleWindow, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"

        d:DesignHeight="450"
        d:DesignWidth="800"

        Height="450"
        Width="560"

        MinHeight="450"
        MinWidth="560"

        TitleCharacterCasing="Normal"
        NonActiveWindowTitleBrush="Gray"
        WindowTitleBrush="Gray"
        BorderBrush="Gray"

        ShowIconOnTitleBar="True"
        Icon="../Resources/Assets/Icon.png"

        WindowStartupLocation="CenterScreen"
        ResizeMode="CanResizeWithGrip"

        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"

        DataContext="{Binding RelativeSource={RelativeSource Self}}">

    <mah:MetroWindow.Resources>
        <converters:ValueSymbolConverter x:Key="ValueSymbolConverter" />
    </mah:MetroWindow.Resources>

    <Grid margin:PanelExtensions.MarginForAllChildren="5">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0"
                   Text="{Binding TextBlockAddRecurrenceNeeded, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                   TextWrapping="Wrap"
                   HorizontalAlignment="Center">
        </TextBlock>

        <DataGrid Grid.Row="1"
                  ItemsSource="{Binding VRecursiveExpensesDerives, Mode=OneTime}"
                  IsReadOnly="True" AutoGenerateColumns="False"
                  CanUserAddRows="False" CanUserDeleteRows="False"
                  CanUserReorderColumns="False"
                  HorizontalScrollBarVisibility="Auto"
                  VerticalScrollBarVisibility="Auto">

            <DataGrid.Columns>

                <DataGridTextColumn Binding="{Binding Account}">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="{Binding DataGridTextColumnAccountHeader, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=local:RecurrentAddWindow}}" />
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>

                <DataGridTextColumn Binding="{Binding Description}">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="{Binding DataGridTextColumnDescriptionHeader, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=local:RecurrentAddWindow}}" />
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>

                <DataGridTemplateColumn SortMemberPath="Category">
                    <DataGridTemplateColumn.Header>
                        <TextBlock Text="{Binding DataGridTemplateColumnCategoryHeader, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=local:RecurrentAddWindow}}" />
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top">

                                <Ellipse Height="16" Width="{Binding Height, RelativeSource={RelativeSource Self}}"
                                         Stroke="{DynamicResource MaterialDesignBody}"
                                         StrokeThickness="1.5"
                                         Fill="{Binding HexadecimalColorCode, Mode=OneWay}"
                                         Margin="0, 0, 3, 0">
                                </Ellipse>

                                <TextBlock Text="{Binding Category}" Margin="3, 0, 0, 0" />

                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Binding="{Binding ModePayment}">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="{Binding DataGridTextColumnModePaymentHeader, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=local:RecurrentAddWindow}}" />
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>

                <DataGridTemplateColumn SortMemberPath="Value">
                    <DataGridTemplateColumn.Header>
                        <TextBlock Text="{Binding DataGridTemplateColumnValueHeader, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=local:RecurrentAddWindow}}" />
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding Converter="{StaticResource ValueSymbolConverter}">
                                        <Binding Path="Value" />
                                        <Binding Path="Symbol" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Binding="{Binding NextDueDate}">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="{Binding DataGridTextColumnNextDueDateHeader, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=local:RecurrentAddWindow}}" />
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>

                <DataGridTextColumn Binding="{Binding Place}">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="{Binding DataGridTextColumnPlaceHeader, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=local:RecurrentAddWindow}}" />
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>

                <DataGridCheckBoxColumn Binding="{Binding RecursiveToAdd}">
                    <DataGridCheckBoxColumn.Header>
                        <TextBlock Text="{Binding DataGridCheckBoxColumnRecursiveToAddHeader, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=local:RecurrentAddWindow}}" />
                    </DataGridCheckBoxColumn.Header>
                </DataGridCheckBoxColumn>

            </DataGrid.Columns>

        </DataGrid>

        <StackPanel Grid.Row="2"
                    margin:PanelExtensions.MarginForAllChildren="5"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right">

            <!-- TODO work -->
            <Button Content="Valid"
                    Style="{StaticResource MaterialDesignPaperDarkButton}"
                    Click="ButtonValid_OnClick">
            </Button>

            <!-- TODO work -->
            <Button Content="Cancel"
                    Style="{StaticResource MaterialDesignPaperSecondaryButton}"
                    Click="ButtonCancel_OnClick">
            </Button>

        </StackPanel>

    </Grid>

</mah:MetroWindow>
