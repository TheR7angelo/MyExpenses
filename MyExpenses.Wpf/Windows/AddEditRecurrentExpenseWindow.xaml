<mah:MetroWindow x:Class="MyExpenses.Wpf.Windows.AddEditRecurrentExpenseWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:MyExpenses.Wpf.Windows"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:margin="clr-namespace:MyExpenses.Wpf.Utils.Margin;assembly=MyExpenses.Wpf.Utils"
        xmlns:converters="clr-namespace:MyExpenses.Wpf.Converters"
        xmlns:wpf="clr-namespace:Mapsui.UI.Wpf;assembly=Mapsui.UI.Wpf"
        mc:Ignorable="d"

        Title="AddEditRecurrentExpenseWindow"

        TitleCharacterCasing="Normal"
        NonActiveWindowTitleBrush="Gray"
        WindowTitleBrush="Gray"
        BorderBrush="Gray"

        ShowIconOnTitleBar="True"
        Icon="../../Resources/Assets/Icon.png"

        WindowStartupLocation="CenterScreen"
        ResizeMode="CanResizeWithGrip"

        d:DesignHeight="685"
        d:DesignWidth="825"

        MinHeight="685"
        MinWidth="825"

        Height="685"
        Width="825"

        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        DataContext="{Binding RelativeSource={RelativeSource Self}}">

    <mah:MetroWindow.Resources>
        <converters:DateOnlyToDateTimeConverter x:Key="DateOnlyToDateTimeConverter" />
        <converters:SplitUpperCaseWordsConverter x:Key="SplitCamelCaseConverter" />
    </mah:MetroWindow.Resources>

    <Grid margin:PanelExtensions.MarginForAllChildren="5"
          VerticalAlignment="Center">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" MinHeight="75" />
            <RowDefinition Height="Auto" MinHeight="75" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" MinWidth="250" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <ComboBox Grid.Row="0" Grid.Column="0"
                  Style="{StaticResource MaterialDesignFilledComboBox}"
                  materialDesign:TextFieldAssist.HasClearButton="True"
                  materialDesign:HintAssist.Hint="{Binding ComboBoxAccountHintAssist, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                  ItemsSource="{Binding Accounts, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                  SelectedValue="{Binding RecursiveExpense.AccountFk, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  SelectedValuePath="{Binding SelectedValuePathAccount}"
                  DisplayMemberPath="{Binding DisplayMemberPathAccount}">
        </ComboBox>

        <Button Grid.Row="0" Grid.Column="1"
                HorizontalAlignment="Left"
                Style="{StaticResource MaterialDesignFloatingActionMiniDarkButton}"
                Click="ButtonAccount_OnClick">

            <Button.Content>
                <materialDesign:PackIcon Kind="PencilPlus" />
            </Button.Content>

        </Button>

        <ComboBox Grid.Row="0" Grid.Column="3"
                  Style="{StaticResource MaterialDesignFilledComboBox}"
                  materialDesign:HintAssist.Hint="{Binding ComboBoxBackgroundHintAssist, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                  ItemsSource="{Binding KnownTileSources}"
                  SelectedItem="{Binding KnownTileSourceSelected}"
                  SelectionChanged="SelectorTile_OnSelectionChanged">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Converter={StaticResource SplitCamelCaseConverter}}" />
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>

        <wpf:MapControl Grid.Row="1" Grid.Column="3" Grid.RowSpan="9"
                        x:Name="MapControl"
                        Background="{DynamicResource MaterialDesignPaper}"
                        Loaded="MapControl_OnLoaded">
        </wpf:MapControl>

        <TextBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
                 materialDesign:HintAssist.Hint="{Binding TextBoxDescriptionHintAssist, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                 Style="{StaticResource MaterialDesignFilledTextBox}"
                 Text="{Binding RecursiveExpense.Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 TextWrapping="Wrap" AcceptsReturn="True" AcceptsTab="True">
        </TextBox>

        <TextBox Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"
                 materialDesign:HintAssist.Hint="{Binding TextBoxNoteHintAssist, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                 Style="{StaticResource MaterialDesignFilledTextBox}"
                 Text="{Binding RecursiveExpense.Note, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 TextWrapping="Wrap" AcceptsReturn="True" AcceptsTab="True">
        </TextBox>

        <ComboBox Grid.Row="3" Grid.Column="0"
                  Style="{StaticResource MaterialDesignFilledComboBox}"
                  materialDesign:TextFieldAssist.HasClearButton="True"
                  materialDesign:HintAssist.Hint="{Binding ComboBoxCategoryTypeHintAssist, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                  ItemsSource="{Binding CategoryTypes, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                  SelectedValue="{Binding RecursiveExpense.CategoryTypeFk, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  SelectedValuePath="{Binding SelectedValuePathCategoryType}"
                  DisplayMemberPath="{Binding DisplayMemberPathCategoryType}">
        </ComboBox>

        <Button Grid.Row="3" Grid.Column="1"
                HorizontalAlignment="Left"
                Style="{StaticResource MaterialDesignFloatingActionMiniDarkButton}"
                Click="ButtonCategoryType_OnClick">

            <Button.Content>
                <materialDesign:PackIcon Kind="PencilPlus" />
            </Button.Content>

        </Button>

        <ComboBox Grid.Row="4" Grid.Column="0"
                  Style="{StaticResource MaterialDesignFilledComboBox}"
                  materialDesign:TextFieldAssist.HasClearButton="True"
                  materialDesign:HintAssist.Hint="{Binding ComboBoxModePaymentHintAssist, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                  ItemsSource="{Binding ModePayments, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                  SelectedValue="{Binding RecursiveExpense.ModePaymentFk, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  SelectedValuePath="{Binding SelectedValuePathModePayment}"
                  DisplayMemberPath="{Binding DisplayMemberPathModePayment}">
        </ComboBox>

        <Button Grid.Row="4" Grid.Column="1"
                HorizontalAlignment="Left"
                Style="{StaticResource MaterialDesignFloatingActionMiniDarkButton}"
                Click="ButtonModePayment_OnClick">

            <Button.Content>
                <materialDesign:PackIcon Kind="PencilPlus" />
            </Button.Content>

        </Button>

        <TextBox Grid.Row="5" Grid.Column="0"
                 materialDesign:HintAssist.Hint="{Binding TextBoxValueHintAssist, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                 Style="{StaticResource MaterialDesignFilledTextBox}"
                 Text="{Binding RecursiveExpense.Value, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                 AcceptsReturn="False" AcceptsTab="False"
                 PreviewKeyDown="UIElementDoubleOnly_OnPreviewKeyDown"
                 PreviewTextInput="UIElementDoubleOnly_OnPreviewTextInput"
                 TextChanged="TextBoxValueDoubleOnly_OnTextChanged">
        </TextBox>

        <Button Grid.Row="5" Grid.Column="1"
                HorizontalAlignment="Left"
                Style="{StaticResource MaterialDesignFloatingActionMiniDarkButton}">
            <!-- Click="ButtonModePayment_OnClick"> -->

            <Button.Content>
                <materialDesign:PackIcon Kind="Calculator" />
            </Button.Content>

        </Button>

        <ComboBox Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2"
                  Style="{StaticResource MaterialDesignFilledComboBox}"
                  materialDesign:TextFieldAssist.HasClearButton="True"
                  materialDesign:HintAssist.Hint="{Binding ComboBoxFrequencyHintAssist, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                  ItemsSource="{Binding RecursiveFrequencies, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                  SelectedValue="{Binding RecursiveExpense.FrequencyFk, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  SelectedValuePath="{Binding SelectedValuePathFrequencyFk}"
                  DisplayMemberPath="{Binding DisplayMemberPathFrequencyFk}"
                  ToolTip="{Binding Path=SelectedItem.Description, RelativeSource={RelativeSource Self}}"
                  SelectionChanged="Selector_OnSelectionChanged">
        </ComboBox>

        <TextBox Grid.Row="7" Grid.Column="0"
                 materialDesign:HintAssist.Hint="{Binding TextBoxRecursiveTotalHintAssist, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                 materialDesign:TextFieldAssist.HasClearButton="True"
                 Style="{StaticResource MaterialDesignFilledTextBox}"
                 Text="{Binding RecursiveExpense.RecursiveTotal, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                 AcceptsReturn="False" AcceptsTab="False"
                 PreviewTextInput="UIElementIntOnly_OnPreviewTextInput">
        </TextBox>

        <TextBox Grid.Row="7" Grid.Column="1" Grid.ColumnSpan="2"
                 materialDesign:HintAssist.Hint="{Binding TextBoxRecursiveCountHintAssist, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                 materialDesign:TextFieldAssist.HasClearButton="True"
                 Style="{StaticResource MaterialDesignFilledTextBox}"
                 Text="{Binding RecursiveExpense.RecursiveCount, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                 AcceptsReturn="False" AcceptsTab="False"
                 PreviewTextInput="UIElementIntOnly_OnPreviewTextInput">
        </TextBox>

        <DatePicker Grid.Row="8" Grid.Column="0" x:Name="DatePicker"
                    materialDesign:HintAssist.Hint="{Binding DatePickerStartDateHintAssist, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource MaterialDesignFilledDatePicker}"
                    SelectedDate="{Binding RecursiveExpense.StartDate, Converter={StaticResource DateOnlyToDateTimeConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    IsTodayHighlighted="True"
                    SelectedDateChanged="DatePicker_OnSelectedDateChanged">
        </DatePicker>

        <TextBox  Grid.Row="8" Grid.Column="1" Grid.ColumnSpan="2"
                  materialDesign:HintAssist.Hint="{Binding TextBoxNextDueDateHintAssist, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                  Style="{StaticResource MaterialDesignFilledTextBox}"
                  Text="{Binding RecursiveExpense.NextDueDate, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                  IsReadOnly="True">
        </TextBox>

        <Grid Grid.Row="9" Grid.Column="0" Grid.ColumnSpan="2">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <CheckBox Grid.Column="0"
                      HorizontalAlignment="Left"
                      FlowDirection="RightToLeft"
                      IsThreeState="False"
                      IsChecked="{Binding RecursiveExpense.ForceDeactivate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Content="{Binding CheckBoxForceDeactivate, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      materialDesign:CheckBoxAssist.CheckBoxSize="30">
            </CheckBox>

            <CheckBox Grid.Column="1"
                      HorizontalAlignment="Left"
                      FlowDirection="RightToLeft"
                      IsThreeState="False"
                      IsChecked="{Binding RecursiveExpense.IsActive, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      Content="{Binding CheckBoxIsActive, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      materialDesign:CheckBoxAssist.CheckBoxSize="30"
                      IsEnabled="False">
            </CheckBox>

        </Grid>

        <Grid Grid.Row="10" Grid.Column="0"
              margin:PanelExtensions.MarginForAllChildren="3">

            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <ComboBox Grid.Row="0" Grid.Column="0"
                      x:Name="ComboBoxSelectorCountry"
                      Style="{StaticResource MaterialDesignFilledComboBox}"
                      materialDesign:TextFieldAssist.HasClearButton="True"
                      materialDesign:HintAssist.Hint="{Binding ComboBoxPlaceCountryHintAssist, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      ItemsSource="{Binding CountriesCollection, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      SelectedItem="{Binding SelectedCountry, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      SelectionChanged="SelectorCountry_OnSelectionChanged">
            </ComboBox>

            <ComboBox Grid.Row="0" Grid.Column="1"
                      x:Name="ComboBoxSelectorCity"
                      Style="{StaticResource MaterialDesignFilledComboBox}"
                      materialDesign:TextFieldAssist.HasClearButton="True"
                      materialDesign:HintAssist.Hint="{Binding ComboBoxPlaceCityHintAssist, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      ItemsSource="{Binding CitiesCollection, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      SelectionChanged="SelectorCity_OnSelectionChanged">
            </ComboBox>

            <ComboBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
                      Style="{StaticResource MaterialDesignFilledComboBox}"
                      materialDesign:TextFieldAssist.HasClearButton="True"
                      materialDesign:HintAssist.Hint="{Binding ComboBoxPlaceHintAssist, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      ItemsSource="{Binding PlacesCollection, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      SelectedValue="{Binding RecursiveExpense.PlaceFk, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      SelectedValuePath="{Binding SelectedValuePathPlace}"
                      DisplayMemberPath="{Binding DisplayMemberPathPlaceName}"
                      SelectionChanged="SelectorPlace_OnSelectionChanged">
            </ComboBox>

        </Grid>

        <Button Grid.Row="10" Grid.Column="1"
                HorizontalAlignment="Left"
                Style="{StaticResource MaterialDesignFloatingActionMiniDarkButton}"
                Click="ButtonPlace_OnClick">

            <Button.Content>
                <materialDesign:PackIcon Kind="PencilPlus" />
            </Button.Content>

        </Button>

        <StackPanel Grid.Row="10" Grid.Column="3"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    margin:PanelExtensions.MarginForAllChildren="5">

            <Button Content="Valid"
                    Style="{StaticResource MaterialDesignPaperButton}"
                    Click="ButtonValid_OnClick">
            </Button>

            <Button Content="Delete"
                    Style="{StaticResource MaterialDesignPaperDarkButton}"
                    Visibility="{Binding EditRecurrentExpense, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Click="ButtonDelete_OnClick">
            </Button>

            <Button Content="Cancel"
                    Style="{StaticResource MaterialDesignPaperSecondaryButton}"
                    Click="ButtonCancel_OnClick">
            </Button>

        </StackPanel>

    </Grid>

</mah:MetroWindow>
