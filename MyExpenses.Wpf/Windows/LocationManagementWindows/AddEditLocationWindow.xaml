<mah:MetroWindow x:Class="MyExpenses.Wpf.Windows.LocationManagementWindows.AddEditLocationWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                 xmlns:wpf="clr-namespace:Mapsui.UI.Wpf;assembly=Mapsui.UI.Wpf"
                 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                 xmlns:margin="clr-namespace:MyExpenses.Wpf.Utils.Margin;assembly=MyExpenses.Wpf.Utils"
                 xmlns:converters="clr-namespace:MyExpenses.Wpf.Converters"
                 mc:Ignorable="d"

                 Title="AddEditLocationWindow"

                 TitleCharacterCasing="Normal"
                 NonActiveWindowTitleBrush="Gray"
                 WindowTitleBrush="Gray"
                 BorderBrush="Gray"

                 ShowIconOnTitleBar="True"
                 Icon="../../Resources/Assets/Icon.png"

                 WindowStartupLocation="CenterScreen"
                 ResizeMode="CanResizeWithGrip"

                 d:DesignHeight="656"
                 d:DesignWidth="780"

                 MinHeight="656"
                 MinWidth="780"

                 Height="656"
                 Width="780"

                 Background="{DynamicResource MaterialDesignPaper}"
                 TextElement.Foreground="{DynamicResource MaterialDesignBody}"
                 DataContext="{Binding RelativeSource={RelativeSource Self}}">

    <!-- TODO add window Title -->

    <mah:MetroWindow.Resources>
        <converters:SplitUpperCaseWordsConverter x:Key="SplitCamelCaseConverter" />
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
    </mah:MetroWindow.Resources>

    <Grid margin:PanelExtensions.MarginForAllChildren="5">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <TextBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                 materialDesign:HintAssist.Hint="{Binding TextBoxNameHintAssist}"
                 Style="{StaticResource MaterialDesignFilledTextBox}"
                 Text="{Binding Place.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
        </TextBox>

        <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
              margin:PanelExtensions.MarginForAllChildren="3">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBox Grid.Column="0"
                     materialDesign:HintAssist.Hint="{Binding TextBoxNumberHintAssist}"
                     Style="{StaticResource MaterialDesignFilledTextBox}"
                     Text="{Binding Place.Number, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            </TextBox>

            <CheckBox Grid.Column="1"
                      IsThreeState="False"
                      IsChecked="{Binding Place.IsOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Content="{Binding CheckBoxContentIsOpen}">
            </CheckBox>

        </Grid>

        <TextBox Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"
                 materialDesign:HintAssist.Hint="{Binding TextBoxStreetHintAssist}"
                 Style="{StaticResource MaterialDesignFilledTextBox}"
                 Text="{Binding Place.Street, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
        </TextBox>

        <TextBox Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2"
                 materialDesign:HintAssist.Hint="{Binding TextBoxPostalCodeHintAssist}"
                 Style="{StaticResource MaterialDesignFilledTextBox}"
                 Text="{Binding Place.Postal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
        </TextBox>

        <TextBox Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2"
                 materialDesign:HintAssist.Hint="{Binding TextBoxCityHintAssist}"
                 Style="{StaticResource MaterialDesignFilledTextBox}"
                 Text="{Binding Place.City, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
        </TextBox>

        <TextBox Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2"
                 materialDesign:HintAssist.Hint="{Binding TextBoxCountryHintAssist}"
                 Style="{StaticResource MaterialDesignFilledTextBox}"
                 Text="{Binding Place.Country, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
        </TextBox>

        <TextBox Grid.Row="6" Grid.Column="0"
                 materialDesign:HintAssist.Hint="{Binding TextBoxLatitudeHintAssist}"
                 Style="{StaticResource MaterialDesignFilledTextBox}"
                 Text="{Binding Place.Latitude, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
        </TextBox>

        <StackPanel Grid.Row="6" Grid.Column="1"
                    Orientation="Horizontal"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    margin:PanelExtensions.MarginForAllChildren="5">

            <Button materialDesign:ButtonAssist.CornerRadius="5"
                    Style="{StaticResource MaterialDesignPaperButton}"
                    Content="{Binding ButtonContentValidNewPoint}"
                    Click="ButtonValidNewPoint_OnClick">
            </Button>

            <Button materialDesign:ButtonAssist.CornerRadius="5"
                    Style="{StaticResource MaterialDesignPaperLightButton}"
                    Content="{Binding ButtonContentZoomToPoint}"
                    Click="ButtonZoomToPoint_OnClick">
            </Button>

        </StackPanel>

        <TextBox Grid.Row="7" Grid.Column="0"
                 materialDesign:HintAssist.Hint="{Binding TextBoxLongitudeHintAssist}"
                 Style="{StaticResource MaterialDesignFilledTextBox}"
                 Text="{Binding Place.Longitude, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
        </TextBox>

        <Grid Grid.Row="8" Grid.Column="0"
              VerticalAlignment="Center"
              HorizontalAlignment="Center"
              margin:PanelExtensions.MarginForAllChildren="5">

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!-- TODO work -->
            <ComboBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="6"
                      Style="{StaticResource MaterialDesignFilledComboBox}"
                      materialDesign:HintAssist.Hint="{Binding ComboBoxBackgroundHintAssist}"
                      ItemsSource="{Binding KnownTileSources}"
                      SelectedItem="{Binding KnownTileSourceSelected}"
                      SelectionChanged="Selector_OnSelectionChanged">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Converter={StaticResource SplitCamelCaseConverter}}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <Button Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3"
                    materialDesign:ButtonAssist.CornerRadius="5"
                    Style="{StaticResource MaterialDesignPaperLightButton}"
                    Content="{Binding ButtonContentSearchByAddress}"
                    Click="ButtonSearchByAddress_OnClick">
            </Button>

            <Button Grid.Row="1" Grid.Column="3" Grid.ColumnSpan="3"
                    materialDesign:ButtonAssist.CornerRadius="5"
                    Style="{StaticResource MaterialDesignPaperLightButton}"
                    Content="{Binding ButtonContentSearchByCoordinate}"
                    Click="ButtonSearchByCoordinate_OnClick">
            </Button>

            <Button Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"
                    materialDesign:ButtonAssist.CornerRadius="5"
                    Style="{StaticResource MaterialDesignPaperButton}"
                    Content="{Binding ButtonContentValid}"
                    Visibility="{Binding EditPlace, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"
                    Click="ButtonValid_OnClick">
            </Button>

            <Button Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="2"
                    materialDesign:ButtonAssist.CornerRadius="5"
                    Style="{StaticResource MaterialDesignPaperSecondaryButton}"
                    Content="{Binding ButtonContentDelete}"
                    Visibility="{Binding EditPlace, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"
                    Click="ButtonDelete_OnClick">
            </Button>

            <Button Grid.Row="2" Grid.Column="4" Grid.ColumnSpan="2"
                    materialDesign:ButtonAssist.CornerRadius="5"
                    Style="{StaticResource MaterialDesignPaperSecondaryButton}"
                    Content="{Binding ButtonContentCancel}"
                    Visibility="{Binding EditPlace, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"
                    Click="ButtonCancel_OnClick">
            </Button>

            <Button Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3"
                    materialDesign:ButtonAssist.CornerRadius="5"
                    Style="{StaticResource MaterialDesignPaperButton}"
                    Content="{Binding ButtonContentValid}"
                    Visibility="{Binding EditPlace, Mode=OneWay, Converter={StaticResource InverseBooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"
                    Click="ButtonValid_OnClick">
            </Button>

            <Button Grid.Row="2" Grid.Column="3" Grid.ColumnSpan="3"
                    materialDesign:ButtonAssist.CornerRadius="5"
                    Style="{StaticResource MaterialDesignPaperSecondaryButton}"
                    Content="{Binding ButtonContentCancel}"
                    Visibility="{Binding EditPlace, Mode=OneWay, Converter={StaticResource InverseBooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"
                    Click="ButtonCancel_OnClick">
            </Button>

        </Grid>

        <Border Grid.Row="7" Grid.Column="1" Grid.RowSpan="2"
                BorderBrush="{DynamicResource MaterialDesignBody}"
                BorderThickness="2"
                CornerRadius="5">

            <wpf:MapControl x:Name="MapControl"
                            Info="MapControl_OnInfo"
                            Loaded="MapControl_OnLoaded">
            </wpf:MapControl>

        </Border>

    </Grid>

</mah:MetroWindow>