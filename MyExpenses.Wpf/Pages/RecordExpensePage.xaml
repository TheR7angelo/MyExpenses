<Page x:Class="MyExpenses.Wpf.Pages.RecordExpensePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="clr-namespace:MyExpenses.Wpf.Pages"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:margin="clr-namespace:MyExpenses.Wpf.Utils.Margin;assembly=MyExpenses.Wpf.Utils"
      xmlns:wpf="clr-namespace:Mapsui.UI.Wpf;assembly=Mapsui.UI.Wpf"
      xmlns:converters="clr-namespace:MyExpenses.Wpf.Converters"
      mc:Ignorable="d"

      Title="RecordExpensePage"

      d:DesignHeight="500"
      d:DesignWidth="800"

      Background="{DynamicResource MaterialDesignPaper}"
      TextElement.Foreground="{DynamicResource MaterialDesignBody}"

      DataContext="{Binding RelativeSource={RelativeSource Self}}">

    <Page.Resources>
        <converters:SplitUpperCaseWordsConverter x:Key="SplitCamelCaseConverter" />
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
    </Page.Resources>

    <Grid margin:PanelExtensions.MarginForAllChildren="5"
          VerticalAlignment="Center">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" MinHeight="75" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" MinWidth="250" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <ComboBox Grid.Row="0" Grid.Column="0"
                  Style="{StaticResource MaterialDesignFilledComboBox}"
                  materialDesign:TextFieldAssist.HasClearButton="True"
                  materialDesign:HintAssist.Hint="{Binding ComboBoxAccountHintAssist, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                  ItemsSource="{Binding Accounts, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                  SelectedValue="{Binding History.AccountFk, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  SelectedValuePath="{Binding SelectedValuePathAccount}"
                  DisplayMemberPath="{Binding DisplayMemberPathAccount}">
        </ComboBox>

        <Button Grid.Row="0" Grid.Column="1"
                HorizontalAlignment="Left"
                Style="{StaticResource MaterialDesignFloatingActionMiniDarkButton}"
                Click="ButtonAccount_OnClick">

            <Button.Content>
                <materialDesign:PackIcon Kind="PencilPlus" />
            </Button.Content>

        </Button>

        <TextBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
                 materialDesign:HintAssist.Hint="{Binding TextBoxDescriptionHintAssist, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                 Style="{StaticResource MaterialDesignFilledTextBox}"
                 Text="{Binding History.Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 TextWrapping="Wrap" AcceptsReturn="True" AcceptsTab="True">
        </TextBox>

        <ComboBox Grid.Row="2" Grid.Column="0"
                  Style="{StaticResource MaterialDesignFilledComboBox}"
                  materialDesign:TextFieldAssist.HasClearButton="True"
                  materialDesign:HintAssist.Hint="{Binding ComboBoxCategoryTypeHintAssist, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                  ItemsSource="{Binding CategoryTypes, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                  SelectedValue="{Binding History.CategoryTypeFk, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  SelectedValuePath="{Binding SelectedValuePathCategoryType}"
                  DisplayMemberPath="{Binding DisplayMemberPathCategoryType}">
        </ComboBox>

        <Button Grid.Row="2" Grid.Column="1"
                HorizontalAlignment="Left"
                Style="{StaticResource MaterialDesignFloatingActionMiniDarkButton}"
                Click="ButtonCategoryType_OnClick">

            <Button.Content>
                <materialDesign:PackIcon Kind="PencilPlus" />
            </Button.Content>

        </Button>

        <ComboBox Grid.Row="3" Grid.Column="0"
                  Style="{StaticResource MaterialDesignFilledComboBox}"
                  materialDesign:TextFieldAssist.HasClearButton="True"
                  materialDesign:HintAssist.Hint="{Binding ComboBoxModePaymentHintAssist, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                  ItemsSource="{Binding ModePayments, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                  SelectedValue="{Binding History.ModePaymentFk, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  SelectedValuePath="{Binding SelectedValuePathModePayment}"
                  DisplayMemberPath="{Binding DisplayMemberPathModePayment}">
        </ComboBox>

        <Button Grid.Row="3" Grid.Column="1"
                HorizontalAlignment="Left"
                Style="{StaticResource MaterialDesignFloatingActionMiniDarkButton}"
                Click="ButtonModePayment_OnClick">

            <Button.Content>
                <materialDesign:PackIcon Kind="PencilPlus" />
            </Button.Content>

        </Button>

        <TextBox Grid.Row="4" Grid.Column="0"
                 materialDesign:HintAssist.Hint="{Binding TextBoxValueHintAssist, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                 Style="{StaticResource MaterialDesignFilledTextBox}"
                 Text="{Binding History.Value, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                 AcceptsReturn="False" AcceptsTab="False"
                 PreviewKeyDown="UIElement_OnPreviewKeyDown"
                 PreviewTextInput="UIElement_OnPreviewTextInput"
                 TextChanged="TextBoxValue_OnTextChanged">
        </TextBox>

        <Button Grid.Row="4" Grid.Column="1"
                HorizontalAlignment="Left"
                Style="{StaticResource MaterialDesignFloatingActionMiniDarkButton}"
                Visibility="Collapsed">
                <!-- Click="ButtonModePayment_OnClick"> -->

            <Button.Content>
                <materialDesign:PackIcon Kind="Calculator" />
            </Button.Content>

        </Button>

        <Grid Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2"
              margin:PanelExtensions.MarginForAllChildren="3">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <DatePicker Grid.Column="0" x:Name="DatePicker"
                        materialDesign:HintAssist.Hint="{Binding DatePickerWhenHintAssist, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        Style="{StaticResource MaterialDesignFilledDatePicker}"
                        SelectedDate="{Binding History.Date, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        IsTodayHighlighted="True">
            </DatePicker>

            <materialDesign:TimePicker Grid.Column="1" x:Name="TimePicker"
                                       materialDesign:HintAssist.Hint="{Binding TimePickerWhenHintAssist, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                       Style="{StaticResource MaterialDesignFilledTimePicker}"
                                       SelectedTime="{Binding History.Date, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                       SelectedTimeFormat="Long">
            </materialDesign:TimePicker>

            <Button Grid.Column="2"
                    HorizontalAlignment="Left"
                    Style="{StaticResource MaterialDesignFloatingActionMiniDarkButton}"
                    Click="ButtonDateNow_OnClick">

                <Button.Content>
                    <materialDesign:PackIcon Kind="ClockFast" />
                </Button.Content>

            </Button>

        </Grid>

        <Grid Grid.Row="6" Grid.Column="0"
              margin:PanelExtensions.MarginForAllChildren="3">

            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <ComboBox Grid.Row="0" Grid.Column="0"
                      x:Name="ComboBoxSelectorCountry"
                      Style="{StaticResource MaterialDesignFilledComboBox}"
                      materialDesign:TextFieldAssist.HasClearButton="True"
                      materialDesign:HintAssist.Hint="{Binding ComboBoxPlaceCountryHintAssist, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      ItemsSource="{Binding CountriesCollection, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      SelectedItem="{Binding SelectedCountry, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      SelectionChanged="SelectorCountry_OnSelectionChanged">
            </ComboBox>

            <ComboBox Grid.Row="0" Grid.Column="1"
                      x:Name="ComboBoxSelectorCity"
                      Style="{StaticResource MaterialDesignFilledComboBox}"
                      materialDesign:TextFieldAssist.HasClearButton="True"
                      materialDesign:HintAssist.Hint="{Binding ComboBoxPlaceCityHintAssist, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      ItemsSource="{Binding CitiesCollection, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      SelectedItem="{Binding SelectedCity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      SelectionChanged="SelectorCity_OnSelectionChanged">
            </ComboBox>

            <ComboBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
                      x:Name="ComboBoxSelectorPlace"
                      Style="{StaticResource MaterialDesignFilledComboBox}"
                      materialDesign:TextFieldAssist.HasClearButton="True"
                      materialDesign:HintAssist.Hint="{Binding ComboBoxPlaceHintAssist, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      ItemsSource="{Binding PlacesCollection, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      SelectedValue="{Binding History.PlaceFk, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      SelectedValuePath="{Binding SelectedValuePathPlace}"
                      DisplayMemberPath="{Binding DisplayMemberPathPlaceName}"
                      SelectionChanged="SelectorPlace_OnSelectionChanged">
            </ComboBox>

        </Grid>

        <Button Grid.Row="6" Grid.Column="1"
                HorizontalAlignment="Left"
                Style="{StaticResource MaterialDesignFloatingActionMiniDarkButton}"
                Click="ButtonPlace_OnClick">

            <Button.Content>
                <materialDesign:PackIcon Kind="PencilPlus" />
            </Button.Content>

        </Button>

        <CheckBox Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="2"
                  HorizontalContentAlignment="Center"
                  Content="{Binding CheckBoxPointedContent, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                  materialDesign:CheckBoxAssist.CheckBoxSize="30"
                  IsChecked="{Binding History.Pointed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Top"
                  VerticalContentAlignment="Top"
                  IsThreeState="False">
        </CheckBox>

        <Grid Grid.Row="8" Grid.Column="0" Grid.ColumnSpan="2"
              Visibility="{Binding EditHistory, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InverseBooleanToVisibilityConverter}}"
              margin:PanelExtensions.MarginForAllChildren="3">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Button Grid.Column="0" Content="{Binding ButtonValidContent, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource MaterialDesignPaperButton}"
                    Click="ButtonValid_OnClick">
            </Button>

            <Button Grid.Column="1" Content="{Binding ButtonCancelContent, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource MaterialDesignPaperSecondaryButton}"
                    Click="ButtonCancel_OnClick">
            </Button>

        </Grid>

        <Grid Grid.Row="8" Grid.Column="0" Grid.ColumnSpan="2"
              Visibility="{Binding EditHistory, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}"
              margin:PanelExtensions.MarginForAllChildren="3">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Button Grid.Column="0" Content="{Binding ButtonValidContent, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource MaterialDesignPaperButton}"
                    Click="ButtonValid_OnClick">
            </Button>

            <Button Grid.Column="1" Content="{Binding ButtonDeleteContent, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource MaterialDesignPaperSecondaryButton}"
                    Click="ButtonDelete_OnClick">
            </Button>

            <Button Grid.Column="2" Content="{Binding ButtonCancelContent, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource MaterialDesignPaperSecondaryButton}"
                    Click="ButtonCancel_OnClick">
            </Button>

        </Grid>

        <ComboBox Grid.Row="0" Grid.Column="2"
                  Style="{StaticResource MaterialDesignFilledComboBox}"
                  materialDesign:HintAssist.Hint="{Binding ComboBoxBackgroundHintAssist, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                  ItemsSource="{Binding KnownTileSources}"
                  SelectedItem="{Binding KnownTileSourceSelected}"
                  SelectionChanged="SelectorTile_OnSelectionChanged">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Converter={StaticResource SplitCamelCaseConverter}}" />
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>

        <wpf:MapControl Grid.Row="1" Grid.Column="2" Grid.RowSpan="8"
                        x:Name="MapControl"
                        Background="{DynamicResource MaterialDesignPaper}"
                        Loaded="MapControl_OnLoaded">
        </wpf:MapControl>

    </Grid>

</Page>
